name: Deploy Help Center Theme

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install zcli
        run: npm i -g @zendesk/zcli
      
      - name: Validate theme structure
        run: |
          # Check required files exist
          test -f assets/style.css || exit 1
          test -f assets/script.js || exit 1
          test -f manifest.json || exit 1
          
          # Validate manifest.json structure
          node -e "const m=require('./manifest.json'); if(!m.name || !m.version || !m.api_version) process.exit(1)"
          
          echo "✅ Theme structure validated"

  deploy:
    needs: validate
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    concurrency:
      group: deploy-${{ github.event.inputs.environment }}
      cancel-in-progress: false
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install zcli
        run: npm i -g @zendesk/zcli
      
      - name: Mask sensitive data
        run: |
          echo "::add-mask::${{ secrets.ZENDESK_API_TOKEN }}"
          echo "::add-mask::${{ secrets.ZENDESK_EMAIL }}"
      
      - name: Login to Zendesk
        env:
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
        run: |
          zcli login \
            --subdomain "$ZENDESK_SUBDOMAIN" \
            --email "$ZENDESK_EMAIL" \
            --token "$ZENDESK_API_TOKEN"
      
      - name: Debug Zendesk CLI configuration
        env:
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          BRAND_ID: ${{ secrets.ZENDESK_BRAND_ID }}
        run: |
          echo "🔍 Debug information:"
          echo "Subdomain: $ZENDESK_SUBDOMAIN"
          echo "Email: $ZENDESK_EMAIL"
          echo "Brand ID: $BRAND_ID"
          echo "ZCLI version: $(zcli --version)"
          
          # 設定ファイルの確認
          echo "📋 Configuration files:"
          ls -la ~/.config/zcli/ 2>/dev/null || echo "No zcli config directory found"
          cat ~/.config/zcli/config 2>/dev/null || echo "No zcli config file found"
          
          # 基本コマンドのテスト
          echo "🧪 Testing basic zcli commands:"
          zcli --help | head -5
          
          # 認証状態の確認
          echo "🔐 Authentication check:"
          zcli auth --help || true
          
          # API接続テスト
          echo "📡 API connection test:"
          curl -s -u "$ZENDESK_EMAIL/token:***" "https://$ZENDESK_SUBDOMAIN.zendesk.com/api/v2/brands.json" | jq '.brands[].id' 2>/dev/null || echo "curl/jq test failed"
      
      - name: Import theme to Zendesk
        env:
          BRAND_ID: ${{ secrets.ZENDESK_BRAND_ID }}
        run: |
          echo "📦 Importing theme to brand: $BRAND_ID"
          
          # 複数の方法でブランド一覧を取得
          echo "🔄 Method 1: zcli themes:list"
          zcli themes:list --verbose 2>&1 || echo "themes:list failed"
          
          echo "🔄 Method 2: zcli brands (if available)"
          zcli brands 2>&1 || echo "brands command not available"
          
          echo "🔄 Method 3: Direct API call for brands"
          zcli api /api/v2/brands.json 2>&1 || echo "API call failed"
          
          # テーマインポートの複数アプローチ
          echo "📥 Attempting theme import with different approaches:"
          
          echo "Approach 1: Standard import with brand ID"
          zcli themes:import --brand "$BRAND_ID" --verbose 2>&1 || IMPORT_FAILED=1
          
          if [ "$IMPORT_FAILED" = "1" ]; then
            echo "Approach 2: Import without explicit brand (using default)"
            zcli themes:import --verbose 2>&1 || echo "Default import also failed"
          fi
          
          echo "✅ Theme import process completed (check logs above for status)"
      
      - name: Create deployment record
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: '${{ github.event.inputs.environment }}',
              description: 'Zendesk theme deployment',
              auto_merge: false,
              required_contexts: []
            });